name: Build, Bump Version, and Release Docker Image

on:
  push:
    branches:
      - main

jobs:
  bump_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Bump version
        id: bump_version
        run: |
          CURRENT_VERSION=$(poetry version -s)
          echo "Current version: $CURRENT_VERSION"
          VERSION_PARTS=(${CURRENT_VERSION//./ })
          VERSION_PARTS[2]=$((VERSION_PARTS[2]+1))
          NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
          echo "New version: $NEW_VERSION"
          poetry version $NEW_VERSION
          echo "::set-output name=new_version::$NEW_VERSION"

      - name: Commit version bump
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add pyproject.toml
          git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version }}"
          git tag v${{ steps.bump_version.outputs.new_version }}
          git push origin main --tags

  build:
    runs-on: ubuntu-latest
    needs: bump_version
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.SAMUEL_PAT2 }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Decode and write gcloud_key.json
        env:
          GCLOUD_KEY: ${{ secrets.GCLOUD_KEY }}
        run: echo $GCLOUD_KEY > gcloud_key.json

      - name: Parse version info from tag
        run: |
          VERSION=${GITHUB_REF:10}
          MAJOR=$(echo "$VERSION" | cut -d. -f1)
          MINOR=$(echo "$VERSION" | cut -d. -f2)
          PATCH=$(echo "$VERSION" | cut -d. -f3)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV
          echo "version_patch=$PATCH" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/remla2024-team9/model-service:${{ env.version }}
            ghcr.io/remla2024-team9/model-service:${{ env.version_major }}.${{ env.version_minor }}.latest
            ghcr.io/remla2024-team9/model-service:${{ env.version_major }}.latest
            ghcr.io/remla2024-team9/model-service:latest
